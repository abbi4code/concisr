// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String @db.VarChar(191)
  email String @unique @db.VarChar(191)
  image String?
  oauth_id String
  provider String 
  coins Int @default(50)
  created_at DateTime @default(now())
  summary Summary[]
  transactions Transactions[]
  coinspend CoinSpend[]

}

model Summary {
  id String @id @db.Uuid @default(uuid())
  user_id Int
  user User @relation(fields: [user_id],references: [id], onDelete: Cascade)
  title String
  url String
  reponse String
  createdAt DateTime @default(now())
  coinspend CoinSpend[]
}

model Transactions{
  id String @id @db.Uuid @default(uuid())
  user_id Int
  user User @relation(fields: [user_id], references: [id],onDelete: Cascade)
  amount Int
  status Int @db.SmallInt
  createdAt DateTime @default(now())
}

model CoinSpend {
  id String @id @db.Uuid @default(uuid())
  user_id Int
  user User @relation(fields: [user_id],references: [id],onDelete: Cascade)
  summary_id String @db.Uuid
  summary Summary @relation(fields: [summary_id],references: [id],onDelete: Cascade)
}